name: Build xsnippet-api Docker image

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      image_name:
        description: 'The name of the resulting Docker image'
        default: 'xsnippet/xsnippet-api'
      release_arch:
        description: 'The CPU architecture to use when choosing the xsnippet-api binary'
        default: 'x86_64'
      release_os:
        description: 'The OS to use when choosing the xsnippet-api binary'
        default: 'linux'
      release_tag:
        description: 'The release tag to use when choosing the xsnippet-api binary'
        default: 'latest'
      registry:
        description: 'The Docker registry to push the image to'
        type: choice
        options:
          - docker.io
      registry_username:
        description: 'The Docker registry user name'
        default: 'xsnippetci'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry ${{ github.event.inputs.registry }}
        uses: docker/login-action@v1
        with:
          registry: ${{ github.event.inputs.registry }}
          username: ${{ github.event.inputs.registry_username }}
          password: ${{ secrets.XSNIPPET_CI_DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          tags: ${{ github.event.inputs.image_name }}:${{ github.event.inputs.release_tag }}
          build-args: |
            RELEASE_ARCH=${{ github.event.inputs.release_arch }}
            RELEASE_OS=${{ github.event.inputs.release_os }}
            RELEASE_TAG=${{ github.event.inputs.release_tag }}
